package com.game.client.handler${handler.packageStr};

#if($handler.respType)
import ReqParseException;
#end
import ClientConstant;
import com.game.netty.handler.HandlerTrigger;
import com.game.netty.handler.client.BaseClientHandle;
import Code;
import MsgId;
#if($handler.importObjStr)
import $handler.importObjStr;
#end
import io.netty.channel.ChannelHandlerContext;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

/**
 *
 * @author KING
 * @date $date
 */
@Slf4j
@Service
@RequiredArgsConstructor
@HandlerTrigger(msgId = MsgId.EN_MessageId.${handler.msgEnumName}_VALUE)
public class $handler.name extends BaseClientHandle {
    @Override
    public void clientExecute(ChannelHandlerContext ctx, short code, byte[] bodyBytes, int reqSeq) {
        if(code != Code.En_Code.E_SUSS_VALUE){
            log.info("receive $handler.msgEnumName code:{}", code);
            return;
        }
        if(bodyBytes == null || bodyBytes.length <= 0){
            return;
        }
#if($handler.respType)
        $handler.respTypeFull resp = null;
        try{
            resp = ${handler.respTypeFull}.parseFrom(bodyBytes);
        }catch (Exception e) {
            log.error("$handler.name $handler.respType parse req have error.",e);
            throw new ReqParseException("$handler.name $handler.respType parse error.");
        }

        log.info("receive $handler.msgEnumName code:{} $handler.respType：{}", code, resp);
#else
        log.info("receive $handler.msgEnumName code：{}", code);
#end
    }

    @Override
    public void sendTestData(ChannelHandlerContext ctx) {
#if($handler.reqType)
        ${handler.reqTypeFull}.Builder req = ${handler.reqTypeFull}.newBuilder();
        super.sendMessage(ctx, MsgId.EN_MessageId.$handler.msgEnumName, req.build().toByteArray(), ClientConstant.atomicInteger.getAndIncrement(), Code.En_Code.E_SUSS);
#else
        super.sendMessage(ctx, MsgId.EN_MessageId.$handler.msgEnumName, null, ClientConstant.atomicInteger.getAndIncrement(), Code.En_Code.E_SUSS);
#end
    }
}